rm(envData)
assign("exp_data",exp_data,envir=envData)
assign("meth_data",meth_data,envir=envData)
assign("cnv_data",cnv_data,envir=envData)
assign("label1",label1,envir = envData)
assign("label2",label2,envir=envData)
assign("amp_gene",amp_gene,envir=envData)
assign("del_gene",del_gene,envir=envData)
assign("exp.p",exp.p,envir = envData)
assign("meth.p",meth.p,envir = envData)
assign("cnv.p",cnv.p,envir = envData)
assign("zzz",zzz,envir = envData)
assign("subpathdata",subpathdata,envir = envData)
assign("opt_subpathways",opt_subpathways,envir = envData)
# assign("p",p,envir=envData)
# assign("p2miR",p2miR,envir=envData)
save(envData,file="envData.rda",compress = 'xz')
load("E:/ICDS/ICDS/envData.rda")
View(envData)
rm(envData)
assign("exp_data",exp_data,envir=envData)
assign("meth_data",meth_data,envir=envData)
assign("cnv_data",cnv_data,envir=envData)
assign("label1",label1,envir = envData)
assign("label2",label2,envir=envData)
assign("amp_gene",amp_gene,envir=envData)
assign("del_gene",del_gene,envir=envData)
assign("exp.p",exp.p,envir = envData)
assign("meth.p",meth.p,envir = envData)
assign("cnv.p",cnv.p,envir = envData)
assign("zzz",zzz,envir = envData)
assign("subpathdata",subpathdata,envir = envData)
assign("opt_subpathways",opt_subpathways,envir = envData)
# assign("p",p,envir=envData)
# assign("p2miR",p2miR,envir=envData)
save(envData,file="envData.rda",compress = 'xz')
load("E:/ICDS/ICDS/envData.rda")
View(envData)
envData[["keysubpathways"]]
load("E:/ICDS/ICDS/data/envData.rda")
View(envData)
subpathdata<-GetExampleData("subpathdata")
keysubpathways<-opt_subpath(subpathdata,zz,overlap=0.6)
subpathdata<-GetExampleData("subpathdata")
keysubpathways<-opt_subpath(subpathdata,zz,overlap=0.6)
?graph.adjacency
devtools::document()
devtools::load_all(".")
library(ICDS)
subpathdata<-GetExampleData("subpathdata")
keysubpathways<-opt_subpath(subpathdata,zz,overlap=0.6)
require(graphite)
zz<-GetExampleData("zzz")
#subpathdata<-FindSubPath(zz) #only show
require(graphite)
zz<-GetExampleData("zzz")
#subpathdata<-FindSubPath(zz) #only show
subpathdata<-GetExampleData("subpathdata")
keysubpathways<-opt_subpath(subpathdata,zz,overlap=0.6)
head(keysubpathways)
is.infinite()
?is.infinite()
subpathdata<-GetExampleData("subpathdata")
keysubpathways<-opt_subpath(subpathdata,zz,overlap=0.6)
head(keysubpathways)
keysubpathways<-Permutation(keysubpathways,zz,nperm1=100,method1=TRUE,nperm2=100,method2=FALSE)
head(keysubpathways)
require(graphite)
subpID<-unlist(strsplit("G6PC/HK3/GPI/FBP1/ALDOA/G6PC2","/"))
pathway.name="Glycolysis / Gluconeogenesis"
zzz<- GetExampleData("zzz")
PlotSubpathway(subpID=subpID,pathway.name=pathway.name,zz=zzz)
devtools::document()
devtools::load_all(".")
library(ICDS)
?getExpp
?getMethp
?getCnvp
library(ICDS)
?icds
??ICDS
??affy
?ICDS
help(ICDS)
library(LncPath)
??lncPath
devtools::document()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
install.packages("E:/ICDS/ICDS_0.1.0.zip", repos = NULL, type = "win.binary")
remove.packages("ICDS")
install.packages("E:/ICDS/ICDS_0.1.0.zip", repos = NULL, type = "win.binary")
install.packages("E:/ICDS/ICDS_0.1.0.zip", repos = NULL, type = "win.binary")
library(ICDS)
??ICDS
devtools::load_all(".")
installed.packages("prettydoc")
installed.packages("prettydoc")
devtools::use_package("prettydoc","Suggests")
installed.packages("prettydoc")
install.packages("prettydoc")
devtools::use_package("prettydoc","Suggests")
devtools::load_all(".")
library(ICDS)
library(clusterprofile)
library(clusterprofiler)
?affy
??lncpath
??affy
?affy
?lncpath
??lncpath
??LncPath
?LncPath
??ICDS
devtools::document()
devtools::document()
library(ICDS)
?`ICDS-package`
?ICDS
devtools::document()
library(ICDS)
browseVignettes("ICDS")
browseVignettes(ICDS)
browseVignettes(ICDS)
devtools::use_vignette("ICDS")
devtools::use_vignette("ICDS")
devtools::use_vignette("ICDS")
devtools::document()
install.packages("etoolbox")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(ICDS)
pdflatex -v
devtools::load_all(".")
library(ICDS)
devtools::build_vignettes()
?devtool
??devtool
devtools::build()
?ICDS
browseVignettes("ICDS")
browseVignettes("ICDS")
library(ICDS)
browseVignettes(ICDS)
browseVignettes("ICDS")
devtools::build()
devtools::use_package("org.Hs.eg.db")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("org.Hs.eg.db", version = "3.8")
library("BiocInstaller", lib.loc="C:/Program Files/R/R-3.4.3/library")
biocLite("org.Hs.eg.db")
require(graphite)
subpID<-unlist(strsplit("G6PC/HK3/GPI/FBP1/ALDOA/G6PC2","/"))
pathway.name="Glycolysis / Gluconeogenesis"
zzz<- GetExampleData("zzz")
library(ICDS)
require(graphite)
subpID<-unlist(strsplit("G6PC/HK3/GPI/FBP1/ALDOA/G6PC2","/"))
pathway.name="Glycolysis / Gluconeogenesis"
zzz<- GetExampleData("zzz")
PlotSubpathway(subpID=subpID,pathway.name=pathway.name,zz=zzz)
detach("package:org.Hs.eg.db", unload=TRUE)
remove.packages("org.Hs.eg.db")
require(graphite)
subpID<-unlist(strsplit("G6PC/HK3/GPI/FBP1/ALDOA/G6PC2","/"))
pathway.name="Glycolysis / Gluconeogenesis"
zzz<- GetExampleData("zzz")
PlotSubpathway(subpID=subpID,pathway.name=pathway.name,zz=zzz)
devtools::use_package("org.Hs.eg.db")
require(graphite)
require(org.Hs.eg.db)
subpID<-unlist(strsplit("G6PC/HK3/GPI/FBP1/ALDOA/G6PC2","/"))
pathway.name="Glycolysis / Gluconeogenesis"
zzz<- GetExampleData("zzz")
PlotSubpathway(subpID=subpID,pathway.name=pathway.name,zz=zzz)
devtools::use_package("org.Hs.eg.db")
biocLite("org.Hs.eg.db")
require(graphite)
require(org.Hs.eg.db)
subpID<-unlist(strsplit("G6PC/HK3/GPI/FBP1/ALDOA/G6PC2","/"))
pathway.name="Glycolysis / Gluconeogenesis"
zzz<- GetExampleData("zzz")
PlotSubpathway(subpID=subpID,pathway.name=pathway.name,zz=zzz)
devtools::check()
install_version("rmarkdown",version=1.8)
devtools::install_version("rmarkdown",version=1.8)
devtools::build_vignettes()
devtools::load_all(".")
devtools::build_vignettes()
devtools::build()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build()
devtools::load_all(".")
library(ICDS)
devtools::build()
devtools::build_vignettes()
devtools::build_vignettes()
getwd()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::load_all(".")
library(ICDS)
devtools::document()
devtools::build_vignettes()
devtools::build()
devtools::build()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
??ICDS
??ICDS
library(ICDS)
??ICDS
devtools::build_vignettes()
??ICDS
??ICDS
browseVignettes("ICDS")
??ICDS
devtools::build_vignettes()
devtools::build_vignettes()
devtools::load_all(".")
library(ICDS)
devtools::load_all(".")
library(ICDS)
??ICD
??ICDS
devtools::load_all(".")
Sys.setenv(R_GSCMD = "C:\\Program Files (x86)\\gs\\gs9.19\\bin\\gswin32c.exe")
devtools::build_vignettes()
devtools::document()
devtools::install_github("hadley/devtools", build_vignettes = TRUE, force = TRUE)
devtools::install_github("hadley/devtools", build_vignettes = TRUE, force = TRUE)
install.packages("rmarkdown")
devtools::document()
devtools::build_manual()
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
devtools::load_all(".")
install_version("rmarkdown",version=1.8)
library(devtool)
library(devtools)
install_version("rmarkdown",version=1.8)
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
devtools::build_vignettes()
library(ICDS)
devtools::build_vignettes()
?ICDS
browseVignettes(ICDS)
browseVignettes("ICDS")
?ICDS
devtools::build()
install.packages("E:/ICDS/ICDS_0.1.0.tar.gz", repos = NULL, type = "source")
?ICDS
??ICDS
??ICDS
?ICDS
??ICDS
?ICDS
library(ICDS)
??ICDS
??ICDS
devtools::build()
devtools::build_manual()
devtools::build_site()
devtools::build()
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
library(ICDS)
devtools::build()
devtools::load_all(".")
library(ICDS)
devtools::check()
devtools::check()
devtools::build()
library(ICDS)
subpID<-unlist(strsplit("G6PC/HK3/GPI/FBP1/ALDOA/G6PC2","/"))
pathway.name="Glycolysis / Gluconeogenesis"
zzz<- GetExampleData("zzz")
PlotSubpathway(subpID=subpID,pathway.name=pathway.name,zz=zzz)
require(graphite)
PlotSubpathway(subpID=subpID,pathway.name=pathway.name,zz=zzz)
detach("package:org.Hs.eg.db", unload=TRUE)
PlotSubpathway(subpID=subpID,pathway.name=pathway.name,zz=zzz)
remove.packages("org.Hs.eg.db")
PlotSubpathway(subpID=subpID,pathway.name=pathway.name,zz=zzz)
detach("package:org.Hs.eg.db", unload=TRUE)
PlotSubpathway(subpID=subpID,pathway.name=pathway.name,zz=zzz)
devtools::load_all(".")
library("BiocInstaller", lib.loc="C:/Program Files/R/R-3.4.3/library")
biocLite("org.Hs.eg.db")
require(graphite)
require(org.Hs.eg.db)
subpID<-unlist(strsplit("G6PC/HK3/GPI/FBP1/ALDOA/G6PC2","/"))
pathway.name="Glycolysis / Gluconeogenesis"
zzz<- GetExampleData("zzz")
require(graphite)
require(org.Hs.eg.db)
subpID<-unlist(strsplit("G6PC/HK3/GPI/FBP1/ALDOA/G6PC2","/"))
pathway.name="Glycolysis / Gluconeogenesis"
zzz<- GetExampleData("zzz")
devtools::document()
devtools::use_package(org.Hs.eg.d)
devtools::use_package(org.Hs.eg.db)
devtools::use_package("org.Hs.eg.db")
devtools::document()
library(ICDS)
# obtain the expression profile data
exp_data<-GetExampleData("exp_data")
#view first six rows and six colmns of data
exp_data[1:6, 1:6]
devtools::load_all(".")
library(ICDS)
devtools::check_cran()
revdepcheck::revdep_check()
installed.packages(revdepcheck)
installed.packages("revdepcheck")
biocLite("revdepcheck")
devtools::check_cran()
revdepcheck::revdep_check()
source("https://install-github.me/r-lib/revdepcheck")
source("https://install-github.me/r-lib/revdepcheck")
source("http://install-github.me/r-lib/revdepcheck")
devtools::inst()
devtools::system_check()
processx::run()
devtools::build()
devtools::build(manual = TRUE)
devtools::document()
devtools::build(manual = TRUE)
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
ln -s /usr/bin/texi2dvi /usr/local/bin/texi2dvi
ln -s /usr/bin/texi2pdf /usr/local/bin/texi2pdf
system("which texi2pdf")
devtools::build(manual = TRUE)
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
system("texi2dvi --version")
devtools::install_github("rstudio/rticles")
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
devtools::build_manual()
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
devtools::build_manual()
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
devtools::build(manual = TRUE)
install.packages("rticle")
install.packages("knitr")
install.packages("C:/Users/zbt/AppData/Local/Temp/RtmpwxD4Q4/downloaded_packages/knitr_1.21.zip", repos = NULL, type = "win.binary")
devtools::build()
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
knitr::opts_chunk$set(tidy = FALSE,
warning = FALSE,
message = FALSE)
devtools::build_vignettes()
?ICDS
library(ICDS)
?ICDS
??ICDS
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
pkgdown:::build_site_external()
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
Sys.setenv(R_TEXI2DVICMD='C:/Program Files (x86)/GnuWin32/bin/texi2dvi')
options(texi2dvi='C:/Program Files (x86)/GnuWin32/bin/texi2dvi')
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
devtools::build(manual = TRUE)
devtools::build(manual = TRUE)
devtools::build_manual()
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
shell('R CMD Rd2pdf . --output=man/figures/manual.pdf --force --no-preview')
devtools::load_all(".")
library(ICDS)
?ICDS
??ICDS
devtools::load_all(".")
library(ICDS)
devtools::build(manual = TRUE)
exp_data<-GetExampleData("exp_data")
library(ICDS)
exp_data<-GetExampleData("exp_data")
meth_data<-GetExampleData("meth_data")
cnv_data<-GetExampleData("cnv_data")
label2<-GetExampleData("label2")
amp_gene<-GetExampleData("amp_gene")
del_gene<-GetExampleData("del_gene")
exp.p<-GetExampleData("exp.p")
meth.p<-GetExampleData("meth.p")
cnv.p<-GetExampleData("cnv.p")
zzz<-GetExampleData("zzz")
label1<-GetExampleData("label1")
subpathdata<-GetExampleData("subpathdata")
keysubpathways<-GetExampleData("keysubpathways")
exp_data<-GetExampleData("exp_data")
meth_data<-GetExampleData("meth_data")
cnv_data<-GetExampleData("cnv_data")
label2<-GetExampleData("label2")
amp_gene<-GetExampleData("amp_gene")
del_gene<-GetExampleData("del_gene")
exp.p<-GetExampleData("exp.p")
meth.p<-GetExampleData("meth.p")
cnv.p<-GetExampleData("cnv.p")
zzz<-GetExampleData("zzz")
label1<-GetExampleData("label1")
subpathdata<-GetExampleData("subpathdata")
opt_subpathways<-GetExampleData("opt_subpathways")
load("E:/ICDS/ICDS/data/envData.rda")
View(envData)
View(envData)
keysubpathways<-GetExampleData("keysubpathways")
opt_subpathways<-keysubpathways
dim(exp_data)
label1
getwd()
exp_data<-exp_data[1:50,c(1:30,133:162)]
exp_data<-GetExampleData("exp_data")
exp_data<-exp_data[1:50,]
meth_data<-meth_data[1:50,]
cnv_data[1:50,]
exp_data<-exp_data[1:50,]
meth_data<-meth_data[1:50,]
cnv_data<-cnv_data[1:50,]
library(ICDS)
exp_data<-exp_data[1:50,]
meth_data<-meth_data[1:50,]
cnv_data<-cnv_data[1:50,]
assign("exp_data",exp_data,envir=envData)
assign("meth_data",meth_data,envir=envData)
assign("cnv_data",cnv_data,envir=envData)
assign("label1",label1,envir = envData)
assign("label2",label2,envir=envData)
assign("amp_gene",amp_gene,envir=envData)
assign("del_gene",del_gene,envir=envData)
assign("exp.p",exp.p,envir = envData)
assign("meth.p",meth.p,envir = envData)
assign("cnv.p",cnv.p,envir = envData)
assign("zzz",zzz,envir = envData)
assign("subpathdata",subpathdata,envir = envData)
assign("opt_subpathways",opt_subpathways,envir = envData)
save(envData,file="envData.rda",compress = 'xz')
getwd()
load("E:/ICDS/ICDS/envData.rda")
View(envData)
load("E:/ICDS/ICDS/envData.rda")
load("E:/ICDS/ICDS/envData.rda")
View(envData)
load("E:/ICDS/ICDS/envData.rda")
View(envData)
GetExampleData("opt_subpathways")
m<-GetExampleData("opt_subpathways")
load("E:/ICDS/ICDS/envData.rda")
View(envData)
devtools::document()
devtools::load_all(".")
library(ICDS)
opt_subpathways<-GetExampleData("opt_subpathways")
getExpp()
profile<-GetExampleData("exp_data")
label<-GetExampleData("label1")
getExpp(profile,label,p.adjust=FALSE)
devtools::build(manual = TRUE)
devtools::document()
devtools::build(manual = TRUE)
install.packages("E:/ICDS/ICDS_0.1.0.tar.gz", repos = NULL, type = "source")
library(ICDS)
?ICDS
??ICDS
devtools::build(manual = TRUE)
d <- data.frame(list(gender = c("M","M","F","M","F","F"),
age=c(47,59,21,32,43,23),
income = c(55000,88000,32450,76500,123000,45650)))
#加入新的因子组，年龄大于25为1
d$over25 <- ifelse(d$age > 25,1,0)
#应用tapply()函数,对d$income进行分析
tapply(d$income,list(d$gender,d$over25),mean)
#应用tapply()函数,对d$income进行分析
tapply(d$income,list(d$gender,d$over25),mean)
devtools::build(manual = TRUE)
devtools::document()
?t.test
library(ICDS)
library(ICDS)
?ICDS
devtools::build(manual = TRUE)
devtools::build_vignettes()
devtools::check()
devtools::build_manual()
devtools::build(manual = TRUE)
